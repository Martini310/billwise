version: '3.9'
services:
  django: &django
    build:
      context: .
      dockerfile: Dockerfile.django
      target: django   # Use the Django stage
    ports:
      - "8000:8000"
    depends_on:
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=billwise.settings
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379
      - IN_DOCKER=1
      - SITE_ID=${SITE_ID}
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - DJANGO_SUPERUSER_FIRST_NAME=${DJANGO_SUPERUSER_FIRST_NAME}
      - CREATE_SUPERUSER=true
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
    networks:
      - backend-network
    command: sh ./build.sh

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - backend-network

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.django
      target: celery   # Use the Celery stage
    depends_on:
      - redis
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY}
      - SITE_ID=${SITE_ID}
      - CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP=True
      - CELERY_BROKER_CONNECTION_MAX_RETRIES=100
      - CELERY_BROKER_CONNECTION_RETRY_DELAY=5  # Retry every 5 seconds
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
    networks:
      - backend-network
    ports: []
    command: sh -c "sleep 180 && celery -A billwise worker -l INFO -c 1"

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile.django
      target: celery
    depends_on:
      - redis
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - SITE_ID=${SITE_ID}
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379
      - CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP=True
      - CELERY_BROKER_CONNECTION_MAX_RETRIES=100
      - CELERY_BROKER_CONNECTION_RETRY_DELAY=5  # Retry every 5 seconds
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
    networks:
      - backend-network
    command: sh -c "sleep 240 && celery -A billwise beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"

  # flower:
  #   image: mher/flower
  #   depends_on:
  #     - celery_worker
  #     - celery_beat
  #   command: celery flower
  #   environment:
  #     - CELERY_BROKER_URL=redis://redis:6379/0
  #     - FLOWER_PORT=5555
  #   ports:
  #   - "5555:5555"
  #   networks:
  #     - backend-network

# volumes:
#   postgres-data:

networks:
  backend-network:
    driver: bridge