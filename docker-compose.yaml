version: '3'
services:
  django: &django
    build:
      context: .
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
      - celery_worker
    environment:
      - DJANGO_SETTINGS_MODULE=billwise.settings
      - CELERY_BROKER=pyamqp://guest@rabbitmq:5672//
      - IN_DOCKER=1
      # - CELERY_RESULT_BACKEND=redis://redis:6379/0  # Optional: Use Redis as a result backend
    command: python manage.py runserver 0.0.0.0:8000

  nextjs:
    build:
      context: ./frontend
    ports:
      - "3000:3000"

  db:
    image: postgres:12
    environment:
      POSTGRES_DB: billwise_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - 5432:5432

  rabbitmq:
    image: "rabbitmq:3.12-alpine"
    ports:
      - "15672:15672"  # RabbitMQ management UI
      - "5672:5672"    # RabbitMQ

  celery_worker:
    <<: *django
    build:
      context: .
    depends_on:
      - rabbitmq
      - db
    environment:
      - DJANGO_SETTINGS_MODULE=billwise.settings
      - CELERY_BROKER_URL=pyamqp://guest@rabbitmq:5672//
    ports: []
    command: celery -A billwise worker -l INFO

  celery_beat:
    build:
      context: .
    depends_on:
      - django
      - rabbitmq
    environment:
      - DJANGO_SETTINGS_MODULE=billwise.settings
      - CELERY_BROKER_URL=pyamqp://guest@rabbitmq:5672//
    command: celery -A billwise beat -l info # --scheduler django_celery_beat.schedulers:DatabaseScheduler

  # flower:
  #   image: mher/flower
  #   ports:
  #     - "5555:5555"  # Flower web UI
  #   depends_on:
  #     - celery_worker

  #   # command: ["./scripts/wait-for-it.sh", "rabbitmq:5672", "--", "celery", "--broker=amqp://guest:guest@rabbitmq:5672", "flower"]
  #   command: celery --broker=amqp://guest:guest@localhost:5672// flower